var documenterSearchIndex = {"docs":
[{"location":"numerical_scheme/#Numerical-scheme","page":"Numerical scheme","title":"Numerical scheme","text":"","category":"section"},{"location":"numerical_scheme/","page":"Numerical scheme","title":"Numerical scheme","text":"We assume that the computational domain is 0Ltimes-P_LP_R for x and v. The system is periodic in x-direction with period L and has compact support on -P_LP_R in v-direction. The mesh is as follows:","category":"page"},{"location":"numerical_scheme/","page":"Numerical scheme","title":"Numerical scheme","text":"x_j=(j-1)Delta x j=1M Delta x=LM  (M text is odd)","category":"page"},{"location":"numerical_scheme/","page":"Numerical scheme","title":"Numerical scheme","text":"p_ell-1 = (ell-1)Delta p-P_L  ell=1N  Delta p=(P_L+P_L)N","category":"page"},{"location":"numerical_scheme/","page":"Numerical scheme","title":"Numerical scheme","text":"We use the spectral Fourier expansion to approximate E_x as it is periodic in the x-direction,","category":"page"},{"location":"numerical_scheme/","page":"Numerical scheme","title":"Numerical scheme","text":"E_xj=sum_k=-(M-1)2^(M-1)2 hatE_xk(t)e^2pi ijkM  text for  j=1M","category":"page"},{"location":"numerical_scheme/","page":"Numerical scheme","title":"Numerical scheme","text":"For the distribution functions (f_0 mathbf f), we use a spectral Fourier expansion for the x-direction and a finite-volume method for the p-direction. For simplicity, we only present the representation for f_0, the notations for mathbf f are the same. Here f_0jell(t) denotes the average of f_0(x_jpt) over a cell C_ell=p_ell-12 p_l+12 with the midpoint p_ell-12=(ell-12)Delta p-P_L, that is,","category":"page"},{"location":"numerical_scheme/","page":"Numerical scheme","title":"Numerical scheme","text":"f_0jell(t)=frac1Delta p int_C_ell f_0(x_jpt)mathrmdp","category":"page"},{"location":"numerical_scheme/","page":"Numerical scheme","title":"Numerical scheme","text":"and also by Fourier expansion in x-direction, then","category":"page"},{"location":"numerical_scheme/","page":"Numerical scheme","title":"Numerical scheme","text":"f_0jell(t)=sum_k=-(M-1)2^(M-1)2 hatf_0kell(t)e^2pi ijkM  j=1M","category":"page"},{"location":"numerical_scheme/","page":"Numerical scheme","title":"Numerical scheme","text":"To evaluate the value of f_0 off-grid in p-direction, we need to reconstruct a continuous function by using the cell average quantity f_0jell. ","category":"page"},{"location":"api/#VectorSpin-types-and-functions","page":"API","title":"VectorSpin types and functions","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [VectorSpin]","category":"page"},{"location":"api/#VectorSpin.BSplineAdvection","page":"API","title":"VectorSpin.BSplineAdvection","text":"struct BSplineAdvection{T} <: VectorSpin.AbstractAdvection\n\nAdvection to be computed on each row\n\nmesh::Mesh\ndims::Symbol\np::Int64\nstep::Any\nmodes::Vector\neig_bspl::Vector\neigalpha::Array{Complex{T}, 1} where T\nfhat::Array{Complex{T}, 2} where T\n\n\n\n\n\n","category":"type"},{"location":"api/#VectorSpin.Mesh","page":"API","title":"VectorSpin.Mesh","text":"struct Mesh{T}\n\nMesh type to store domain parameters\n\nnv::Int64: Number of points in v\nnx::Int64: Number of points in x\nvmin::Any: Domain size v ∈ ]vmin,vmax[\nvmax::Any: Domain size v ∈ ]vmin,vmax[\nxmin::Any: Domain size x ∈ [xmin,xmax]\nxmax::Any: Domain size x ∈ [xmin,xmax]\nkx::Vector: Wave number vector to compute derivative with FFTs\ndx::Any: Size step along x\ndv::Any: Size step along v\nx::Vector: points along x direction\nv::Vector: points along v direction\nvnode::Vector: center points along v direction\n\n\n\n\n\n","category":"type"},{"location":"api/#VectorSpin.advection!-Union{Tuple{T}, Tuple{Any, PSMAdvection{T}, Any, Any}} where T","page":"API","title":"VectorSpin.advection!","text":"advection!(df, adv, v, dt)\n\n\ninterpolate df(x + delta) with Parabolic Spline Method (PSM) \n\nWe consider a linear advection problem in p direction\n\nfracpartial fpartial t + a fracpartial fpartial x =0\n\nFrom the conservation of the volume, we have the following identity\n\nf_jell(t)=frac1Delta p int_p_ell-12 ^p_ell+12 f(x_jpt)mathrmdp =frac1Delta p int_p_ell-12-at ^p_ell+12-at f(x_jp0)mathrmdp\n\nFor simplicity, denote by qin 1 M the index such that p_ell+12-at in p_q-12p_q+12 i.e. p_ell+12-at in C_q, then we have\n\nf_jell(t) =frac1Delta p int_p_q-12-at ^p_q-12 f(x_jp0)mathrmdp+f_jq(0)-frac1Delta p int_p_q+12 ^p_q+12-at f(x_jp0)mathrmdp\n\nHere we need to reconstruct a polynomial function f(x_jp0) using the averages f_jl(0) using the PSM approach. \n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.bf_energy","page":"API","title":"VectorSpin.bf_energy","text":"bf_energy(f1, f2, f3, S1, S2, S3, mesh, tiK)\nbf_energy(f1, f2, f3, S1, S2, S3, mesh, tiK, n_i)\nbf_energy(f1, f2, f3, S1, S2, S3, mesh, tiK, n_i, mub)\n\n\n\n\n\n\n","category":"function"},{"location":"api/#VectorSpin.bspline-Tuple{Any, Any, Any}","page":"API","title":"VectorSpin.bspline","text":"bspline(p, j, x)\n\n\nReturn the value at x in [0,1] of the B-spline with integer nodes of degree p with support starting at j.  Implemented recursively using the  De Boor's Algorithm\n\nB_i0(x) = left\nbeginmatrix\n1  mathrmif  quad t_i  x  t_i+1 \n0  mathrmotherwise \nendmatrix\nright\n\nB_ip(x) = fracx - t_it_i+p - t_i B_ip-1(x) \n+ fract_i+p+1 - xt_i+p+1 - t_i+1 B_i+1p-1(x)\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.energy-Tuple{Any, Any, Any, Any, Any, Any, Any, Any, Mesh, Any, Any}","page":"API","title":"VectorSpin.energy","text":"energy(f0, f1, f2, f3, S1, S2, S3, E1, mesh, tiK, n_i)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.ex_energy-Tuple{Any, Any}","page":"API","title":"VectorSpin.ex_energy","text":"ex_energy(E1, mesh)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.initialfunction-Union{Tuple{T}, Tuple{Mesh{T}, Vararg{Any, 4}}} where T","page":"API","title":"VectorSpin.initialfunction","text":"initialfunction(mesh, α, kx, σ, ata)\n\n\nGaussian function with a perturbation in x direction\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.kinetic_energy-Tuple{Any, Mesh}","page":"API","title":"VectorSpin.kinetic_energy","text":"kinetic_energy(f0, mesh)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.s_energy","page":"API","title":"VectorSpin.s_energy","text":"s_energy(S1, S2, S3, mesh)\ns_energy(S1, S2, S3, mesh, mub)\ns_energy(S1, S2, S3, mesh, mub, n_i)\n\n\n\n\n\n\n\n\n","category":"function"},{"location":"api/#VectorSpin.smod-Tuple{Any}","page":"API","title":"VectorSpin.smod","text":"smod(S)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.snorm-Tuple{Any, Any, Any}","page":"API","title":"VectorSpin.snorm","text":"snorm(S1, S2, S3)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.step!-Union{Tuple{T}, Tuple{H1fhSubsystem{T}, Matrix{T}, Matrix{T}, Matrix{T}, Matrix{T}, Vector{T}, Vector{T}, Vector{T}, T, Any}} where T","page":"API","title":"VectorSpin.step!","text":"step!(op, f0, f1, f2, f3, S1, S2, S3, dt, tiK)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.step!-Union{Tuple{T}, Tuple{H2Subsystem{T}, Matrix{T}, Matrix{T}, Matrix{T}, Matrix{T}, Array{Complex{T}, 1}, Array{Complex{T}, 1}, T, Any}} where T","page":"API","title":"VectorSpin.step!","text":"compute the subsystem H2\n\nstep!(op, f0, f1, f2, f3, E3, A3, dt, h_int)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.step!-Union{Tuple{T}, Tuple{H2fhSubsystem{T}, Matrix{T}, Matrix{T}, Matrix{T}, Matrix{T}, Vector{T}, Vector{T}, Vector{T}, T, Any}} where T","page":"API","title":"VectorSpin.step!","text":"step!(op, f0, f1, f2, f3, S1, S2, S3, dt, tiK)\n\n\ncompute the subsystem Hs2\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.step!-Union{Tuple{T}, Tuple{H3Subsystem{T}, Matrix{T}, Matrix{T}, Matrix{T}, Matrix{T}, Array{Complex{T}, 1}, Array{Complex{T}, 1}, T, Any}} where T","page":"API","title":"VectorSpin.step!","text":"step!(op, f0, f1, f2, f3, E2, A2, dt, h_int)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.step!-Union{Tuple{T}, Tuple{H3fhSubsystem{T}, Matrix{T}, Matrix{T}, Matrix{T}, Matrix{T}, Vector{T}, Vector{T}, Vector{T}, T, Any}} where T","page":"API","title":"VectorSpin.step!","text":"step!(op, f0, f1, f2, f3, S1, S2, S3, dt, tiK)\n\n\ncompute the subsystem Hs3\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.step!-Union{Tuple{T}, Tuple{HASubsystem{T}, Matrix{T}, Matrix{T}, Matrix{T}, Matrix{T}, Array{Complex{T}, 1}, Array{Complex{T}, 1}, Array{Complex{T}, 1}, Array{Complex{T}, 1}, T}} where T","page":"API","title":"VectorSpin.step!","text":"step!(op, f0, f1, f2, f3, E2, E3, A2, A3, dt)\n\n\nbeginaligned\ndotp = (A_y A_z) cdot partial_x (A_y A_z)   \ndotEy = -partial_x^2 A_y + A_y rho \ndotEz = -partial_x^2 A_z + A_z rho \nendaligned\n\ndocumentation\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.step!-Union{Tuple{T}, Tuple{HeSubsystem{T}, Matrix{T}, Matrix{T}, Matrix{T}, Matrix{T}, Array{Complex{T}, 1}, Array{Complex{T}, 1}, Array{Complex{T}, 1}, Array{Complex{T}, 1}, Array{Complex{T}, 1}, T}} where T","page":"API","title":"VectorSpin.step!","text":"step!(op, f0, f1, f2, f3, E1, E2, E3, A2, A3, dt)\n\n\ncompute the first subsystem He()\n\nf_t - Ef_v = 0\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.step!-Union{Tuple{T}, Tuple{HpSubsystem{T}, Matrix{T}, Matrix{T}, Matrix{T}, Matrix{T}, Array{Complex{T}, 1}, T}} where T","page":"API","title":"VectorSpin.step!","text":"step!(op, f0, f1, f2, f3, E1, dt)\n\n\nSubsystem to solve H_p subsystem\n\ndocumentation\n\n\n\n\n\n","category":"method"},{"location":"api/#VectorSpin.step!-Union{Tuple{T}, Tuple{HvSubsystem{T}, Matrix{T}, Matrix{T}, Matrix{T}, Matrix{T}, Array{Complex{T}, 1}, T}} where T","page":"API","title":"VectorSpin.step!","text":"step!(op, f0, f1, f2, f3, E1, dt)\n\n\nsubsystem for Hv:\n\nf_t + vf_x = 0\n\n-E_x = rho - 1\n\n\n\n\n\n","category":"method"},{"location":"hamiltonian_splitting/#Hamiltonian-splitting","page":"Hamiltonian Splitting","title":"Hamiltonian splitting","text":"","category":"section"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"mathcalH=mathcalH_p+mathcalH_A+mathcalH_E+mathcalH_2+mathcalH_3","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"where ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginaligned\nmathcalH_p  = frac12int p^2 f_0 mathrmd xmathrmdp\nmathcalH_A = frac12int mathbf A_perp^2 f_0 mathrmd xmathrmd p+frac12int leftfracpartial mathbf A_perppartial xright^2 mathrmdx\nmathcalH_E = frac12int mathbf E^2  mathrmd x=frac12int (E_x^2+mathbf E_perp^2 ) mathrmd x \nmathcalH_2 = int_Omega  mathfrakh f_2 fracpartial A_zpartial x mathrmdxmathrmdp\nmathcalH_3 = int_Omega  -mathfrakh f_3 fracpartial A_ypartial x mathrmdxmathrmdp\nendaligned ","category":"page"},{"location":"hamiltonian_splitting/#Subsystem-for-\\mathcal{H}_p","page":"Hamiltonian Splitting","title":"Subsystem for mathcalH_p","text":"","category":"section"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"The subsystem fracpartial mathcalZpartial t =  mathcalZ mathcalH_p  associated to mathcalH_p = frac12int p^2 f_0 mathrmd xmathrmdp is ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"left\nbeginaligned\nfracpartial f_0partial t = f_0 mathcalH_p  = -pfracpartial f_0partial x \nfracpartial mathbffpartial t = mathbff mathcalH_p = -pfracpartial mathbffpartial x \nfracpartial f_1partial t = f_1 mathcalH_p = -pfracpartial f_1partial x \nfracpartial f_2partial t = f_2 mathcalH_p = -pfracpartial f_2partial x \nfracpartial f_3partial t = f_3 mathcalH_p = -pfracpartial f_3partial x\n fracpartial E_xpartial t =  E_x mathcalH_p  =- int_mathbbR p f_0mathrmdp\n fracpartial mathbf E_perppartial t =fracpartial mathbf A_perppartial t =0 \n fracpartial mathbf E_perppartial t =   mathbf E_perp mathcalH_p   = mathbf 0 fracpartial mathbf A_perppartial t =   mathbf A_perp mathcalH_p   = mathbf 0\nendaligned\nright","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"We denote the initial value as (f_0^0(xp)mathbff^0(xp) E_x^0(x)mathbf E_perp^0(x)mathbf A_perp^0(x)) at time t=0. The solution at time t of this subsystem can be written explicitly, ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginaligned\n        f_0(xpt)=f_0^0(x-ptp)   mathbff(xpt)=mathbff^0(x-ptp) f_2(xpt)=f_2^0(x-ptp) f_3(xpt)=f_3^0(x-ptp) \n        E_x(xt)=E_x^0(x)-int_0^tint_mathbbR pf_0(xptau) mathrmdpmathrmdtau=E_x^0(x)-int_0^tint_mathbbR pf_0^0(x-ptaup) mathrmdpmathrmdtau \n        mathbf E_perp(xt)=mathbf E_perp^0(x)  mathbf A_perp(xt)=mathbf A_perp^0(x) \n    endaligned","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"Next, we check that the solution propagates the Poisson equation. To do so, we assume that the Poisson equation holds initially, i.e.","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"fracpartial E_x^0partial x=int_mathbbR f_0^0mathrmdp-1","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"Then we have, by differentiating the expression of E_x(t x) with respect to x ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginaligned\nfracpartial E_x(xt)partial x=fracpartial E_x^0partial x-int_0^tint_mathbbR pfracpartial f_0^0(x-ptaup)partial x mathrmdpmathrmdtau=fracpartial E_x^0partial x+int_0^tint_mathbbR fracpartial f_0^0(x-ptaup)partial tau mathrmdpmathrmdtau\n=fracpartial E_x^0partial x+int_mathbbR  f_0^0(x-ptp)mathrmdp-int_mathbbR  f_0^0(xp)mathrmdp=int_mathbbR  f_0(xpt)mathrmdp-1 \nendaligned","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"which proves that the Poisson equation is satisfied at time t.","category":"page"},{"location":"hamiltonian_splitting/#Subsystem-for-\\mathcal{H}_A","page":"Hamiltonian Splitting","title":"Subsystem for mathcalH_A","text":"","category":"section"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"The subsystem fracpartial mathcalZpartial t =  mathcalZ mathcalH_A  associated to the sub-Hamiltonian mathcalH_A = frac12int mathbf A_perp^2 f_0 mathrmdmathbf xmathrmdmathbf p+frac12int fracpartial mathbf A_perppartial x^2 mathrmdmathbf x is ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"left\nbeginaligned\nfracpartial f_0partial t = f_0 mathcalH_A  = mathbf A_perp cdot fracpartial mathbf A_perppartial xfracpartial f_0partial p \nfracpartial mathbf fpartial t = mathbf f mathcalH_A = mathbf A_perp cdot fracpartial mathbf A_perppartial x fracpartial mathbf fpartial p \nfracpartial f_2partial t = f_2 mathcalH_A = mathbf A_perp cdot fracpartial mathbf A_perppartial x fracpartial f_2partial p \nfracpartial f_3partial t = f_3 mathcalH_A = mathbf A_perp cdot fracpartial mathbf A_perppartial x fracpartial f_3partial p\n fracpartial E_xpartial t =  E_x mathcalH_A  = 0\n fracpartial mathbf E_perppartial t =   mathbf E_perp mathcalH_A   = - fracpartial^2 mathbf A_perppartial x^2 + mathbf A_perp int_mathbbR  f_0  mathrmdmathrmp\n fracpartial E_xpartial t =fracpartial mathbf A_perppartial t = 0   mathbf A_perp mathcalH_A   = mathbf 0\nendaligned\nright","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"We denote by (f_0^0(xp)mathbf f^0(xp) E_x^0(x)mathbf E_perp^0(x)mathbf A_perp^0(x)) the initial value at time t=0. The exact solution at time t is,","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginaligned\n        f_0(xpt)=f_0^0 left( xp+tmathbf A_perp^0(x) cdot fracpartial mathbf A_perp^0(x)partial x  right) \n   mathbf f(xpt)=mathbf f^0 left( xp+tmathbf A_perp^0(x) cdot fracpartial mathbf A_perp^0(x)partial x  right) \n        mathbf E_perp(xt)=mathbf E_perp^0(x)-tfracpartial^2 mathbf A_perp^0(x)partial x^2 +tmathbf A_perp^0(x)int_mathbbR f_0^0(xp) mathrmdp \n        E_x(xt)=E_x^0(x)  mathbf A_perp(xt)=mathbf A_perp^0(x) \nendaligned","category":"page"},{"location":"hamiltonian_splitting/#Subsystem-for-\\mathcal{H}_E","page":"Hamiltonian Splitting","title":"Subsystem for mathcalH_E","text":"","category":"section"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"The subsystem fracpartial mathcalZpartial t =  mathcalZ mathcalH_E  associated to the sub-Hamiltonian mathcalH_E = frac12int mathbf E^2  mathrmdmathbf x is ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"left\nbeginaligned\nfracpartial f_0partial t = f_0 mathcalH_E  = -E_x fracpartial f_0partial p \nfracpartial mathbf fpartial t = mathbf f mathcalH_E = -E_x fracpartial mathbf fpartial p \nfracpartial f_2partial t = f_2 mathcalH_E = -E_x fracpartial f_2partial p \nfracpartial f_3partial t = f_3 mathcalH_E =-E_x fracpartial f_3partial p\n fracpartial E_xpartial t =  E_x mathcalH_E  = 0\n fracpartial mathbf E_perppartial t =   mathbf E_perp mathcalH_E   = mathbf 0\n fracpartial E_xpartial t = fracpartial mathbf A_perppartial t = 0   mathbf A_perp mathcalH_E   =  -mathbf E_perp\nendaligned\nright","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"With the initial value(f_0^0(xp)mathbf f^0(xp)E_x^0(x)mathbf E_perp^0(x)mathbf A_perp^0(x)) at time t=0, the solution at time t is as follows, ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginaligned\n f_0(xpt)=f_0^0 ( xp-tE_x^0(x) ) \n mathbf f(xpt)=mathbf f^0 ( xp-tE_x^0(x) )  \n E_x(xt)=E_x^0(x) \n mathbf E_perp(xt)=mathbf E_perp^0(x) \n mathbf A_perp(xt)=mathbf A_perp^0(x) -tmathbf E_perp^0(x)\nendaligned","category":"page"},{"location":"hamiltonian_splitting/#Subsystem-for-\\mathcal{H}_2","page":"Hamiltonian Splitting","title":"Subsystem for mathcalH_2","text":"","category":"section"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"The subsystem fracpartial mathcalZpartial t =  mathcalZ mathcalH_2  associated to the sub-Hamiltonian mathcalH_2 = int_Omega  mathfrakh f_2 fracpartial A_zpartial x mathrmdxmathrmdp is ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"left\nbeginaligned\nfracpartial f_0partial t = f_0 mathcalH_2  = mathfrakhfracpartial^2 A_zpartial x^2fracpartial f_2partial p  \nfracpartial f_1partial t = f_1 mathcalH_2 = fracpartial A_z partial x  f_3 \nfracpartial f_2partial t = f_2 mathcalH_2 = fracmathfrakh3 fracpartial^2 A_zpartial x^2fracpartial f_0partial p \nfracpartial f_3partial t = f_3 mathcalH_2 = -fracpartial A_z partial x f_1\n fracpartial  E_zpartial t =   E_z mathcalH_2   =-mathfrakh int_mathbbR  fracpartial f_2partial xmathrmdp\n fracpartial E_xpartial t =fracpartial  E_ypartial t =fracpartial mathbf A_perppartial t =0 \nendaligned\nright","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"In this subsystem, we observe some coupling between the distribution functions. To write down the exact solution, we reformulate the equations on (f_0 mathbf f) as, using A_z(x t)=A_z^0(x)","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"    beginaligned\n     partial_t    beginpmatrix\n            f_1  \n            f_3\n        endpmatrix-fracpartial A_z^0 partial x J beginpmatrix\nf_1  \nf_3\nendpmatrix =0  \n partial_t    beginpmatrix\n    f_0 \n    f_2\nendpmatrix-mathfrakhfracpartial^2 A_z^0partial x^2 beginpmatrix\n    0  1 \n    frac13 0\nendpmatrix partial_p    beginpmatrix\nf_0 \nf_2\nendpmatrix =0 \n    endaligned","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"where J denotes the symplectic matrix","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"J=beginpmatrix\n    0  1 \n-1  0\nendpmatrix","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"With the initial value (f_0^0(xp)mathbf f^0(xp)E_x^0(x)mathbf E_perp^0(x)mathbf A_perp^0(x)) at time t=0, the exact solution for the first system is","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginpmatrix\n            f_1  \n            f_3\n        endpmatrix(xpt)=expleft(fracpartial A_z^0(x) partial x J tright)beginpmatrix\nf_1^0(xp)  \nf_3^0(xp)\nendpmatrix  textwith exp(Js)=beginpmatrix\n    cos(s)  sin(s) \n-sin(s)  cos(s)\nendpmatrix","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"Let us now focus on the second system","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"partial_t  beginpmatrix\n    f_0 \n    f_2\nendpmatrix-mathfrakhfracpartial^2 A_z^0partial x^2 beginpmatrix\n    0  1 \n    frac13 0\nendpmatrix partial_p    beginpmatrix\nf_0 \nf_2\nendpmatrix =0 ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"By the eigen-decomposition ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginpmatrix\n    frac12  fracsqrt32 \n    frac12 -fracsqrt32\nendpmatrix\nbeginpmatrix\n    0  1 \n    frac13 0\nendpmatrix\nbeginpmatrix\n    1  1 \n    frac1sqrt3 frac-1sqrt3\nendpmatrix\n=beginpmatrix\nfrac1sqrt3 0 \n    0 -frac1sqrt3\nendpmatrix","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"then, one can diagonalize the transport equation to get","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"partial_t  beginpmatrix\n    frac12f_0+fracsqrt32f_2 \n    frac12f_0-fracsqrt32f_2 \nendpmatrix- \nfracmathfrakhsqrt3fracpartial^2 A_z^0partial x^2\nbeginpmatrix\n    1  0 \n    0 -1\nendpmatrix partial_p    beginpmatrix\n    frac12f_0+fracsqrt32f_2 \n    frac12f_0-fracsqrt32f_2 \nendpmatrix =0\n","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"Thus, we can solve the transport equation","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"Big(frac12f_0pmfracsqrt32f_2Big)(xpt)=Big(frac12f_0^0 pmfracsqrt32f_2^0Big)( xppm tfracmathfrakhsqrt3fracpartial^2 A_z^0partial x^2(x))","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"and compute the exact solution at time t as follows, ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginaligned\n        f_1(xpt)=cos(t fracpartial A_z^0(x) partial x )f_1^0 ( xp)+sin(t fracpartial A_z^0(x) partial x )f_3^0 ( xp) \n        f_3(xpt)=-sin(t fracpartial A_z^0(x) partial x )f_1^0 ( xp)+cos(t fracpartial A_z^0(x) partial x )f_3^0 ( xp) \n        f_0(xpt)=Big(frac12f_0^0 +fracsqrt32f_2^0Big)( xp+tfracmathfrakhsqrt3fracpartial^2 A_z^0partial x^2(x) )+Big(frac12f_0^0 -fracsqrt32f_2^0Big)( xp-tfracmathfrakhsqrt3fracpartial^2 A_z^0partial x^2(x) )\n        f_2(xpt)=frac1sqrt3Big(frac12f_0^0 +fracsqrt32f_2^0Big)( xp+tfracmathfrakhsqrt3fracpartial^2 A_z^0partial x^2(x) )-frac1sqrt3Big(frac12f_0^0 -fracsqrt32f_2^0Big)( xp-tfracmathfrakhsqrt3fracpartial^2 A_z^0partial x^2(x) )\n        mathbf A_perp(xt)=mathbf A_perp^0(x) E_x(xt)=E_x^0(x) E_y(xt)=E_y^0(x)\n        E_z(xt)=E_z^0(x)-tmathfrakhint_mathbbR fracpartial f_2^0partial xmathrmdp\n    endaligned","category":"page"},{"location":"hamiltonian_splitting/#Subsystem-for-\\mathcal{H}_3","page":"Hamiltonian Splitting","title":"Subsystem for mathcalH_3","text":"","category":"section"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"The subsystem fracpartial mathcalZpartial t =  mathcalZ mathcalH_3  associated to the sub-Hamiltonian mathcalH_3 = -int_Omega mathfrakh f_3 fracpartial A_ypartial x mathrmdxmathrmdp is ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"left\nbeginaligned\nfracpartial f_0partial t = f_0 mathcalH_3  = -mathfrakhfracpartial^2 A_ypartial x^2 fracpartial f_3partial p  \nfracpartial f_1partial t = f_1 mathcalH_3 =  fracpartial A_y partial x f_2 \nfracpartial f_2partial t = f_2 mathcalH_3 = - fracpartial A_y partial x f_1\nfracpartial f_3partial t =- f_3 mathcalH_3 = -fracmathfrakh3 fracpartial^2 A_ypartial x^2 fracpartial f_0partial p \n fracpartial  E_ypartial t =   E_y mathcalH_3   = mathfrakh int_mathbbR  fracpartial f_3partial xmathrmdp\n fracpartial E_xpartial t = fracpartial  E_zpartial t = fracpartial mathbf A_perppartial t =0 \nendaligned\nright","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"This subsystem is very similar to the mathcalH_2 one, hence, as previously, we reformulate the equations on the distribution functions as ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginaligned\n         partial_t    beginpmatrix\n            f_1  \n            f_2\n        endpmatrix\n        -fracpartial A_y^0 partial x J \n        beginpmatrix\n           0  -1 \n           1  0\n        endpmatrix \n        beginpmatrix\n        f_1  \n        f_2\n    endpmatrix =0 \n         partial_t    beginpmatrix\n            f_0 \n            f_3\n        endpmatrix+mathfrakhfracpartial^2 A_y^0partial x^2 beginpmatrix\n            0  1 \n            frac13 0\n        endpmatrix partial_p    beginpmatrix\n            f_0 \n            f_3\n        endpmatrix =0 \n     fracpartial E_xpartial t= 0 \n fracpartial  E_ypartial t =   mathfrakh int_mathbbR  fracpartial f_3partial xmathrmdp\n     fracpartial  E_zpartial t =   E_z H_3   =  0 \n     fracpartial mathbf A_perppartial t =   mathbf A_perp H_3   =  0\n    endaligned","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"with initial value","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"(f_0^0(xp)mathbf f^0(xp)E_x^0(x)mathbf E_perp^0(x)mathbf A_perp^0(x)) at time t=0. We derive similar formula with mathcalH_2 for the exact solution at time t ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginaligned\n        f_1(xpt)=cos(t fracpartial A_y^0(x) partial x )f_1^0 ( xp)+sin(t fracpartial A_y^0(x) partial x )f_2^0 ( xp) \n        f_2(xpt)=-sin(t fracpartial A_y^0(x) partial x )f_1^0 ( xp)+cos(t fracpartial A_y^0(x) partial x )f_2^0 ( xp) \n        f_0(xpt)=Big(frac12f_0^0 +fracsqrt32f_3^0Big)( xp-tfracmathfrakhsqrt3fracpartial^2 A_y^0partial x^2(x) )+Big(frac12f_0^0 -fracsqrt32f_3^0Big)( xp+tfracmathfrakhsqrt3fracpartial^2 A_y^0partial x^2(x) )\n        f_3(xpt)=frac1sqrt3Big(frac12f_0^0 +fracsqrt32f_3^0Big)( xp-tfracmathfrakhsqrt3fracpartial^2 A_y^0partial x^2(x) )-frac1sqrt3Big(frac12f_0^0 -fracsqrt32f_3^0Big)( xp+tfracmathfrakhsqrt3fracpartial^2 A_y^0partial x^2(x) )\n    endaligned ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"beginaligned\n E_y(xt)=E_y^0(x)+tmathfrakhint_mathbbR fracpartial f_3^0partial xmathrmdp \n mathbf A_perp(xt)=mathbf A_perp^0(x) \n E_x(xt)=E_x^0(x) \n E_z(xt)=E_z^0(x) \nendaligned ","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"To compute the solution E_y(xt), we use the fact that","category":"page"},{"location":"hamiltonian_splitting/","page":"Hamiltonian Splitting","title":"Hamiltonian Splitting","text":"int_mathbbR f_3(xpt) mathrmdp =int_mathbbR f_3^0(xp)mathrmd p","category":"page"},{"location":"spin_ions/#Model-with-ions-and-spin-effects","page":"Version with ions","title":"Model with ions and spin effects","text":"","category":"section"},{"location":"spin_ions/","page":"Version with ions","title":"Version with ions","text":"\nusing FFTW\nusing Plots\nusing VectorSpin\n\nfunction main(T)\n\n    nx = 119 # mesh number in x direction\n    nv = 129 # mesh number in v direction\n    vmin, vmax = -5.0, 5.0 # computational domain [-H/2,H/2] in v\n    kx = 0.5 # wave number/frequency\n    xmin, xmax = 0.0, 2π / kx # computational domain [0,L] in x\n    tildeK = 0.1598 # normalized parameter tildeK\n    dt = 0.1 # time step size()\n    nsteps = floor(Int, T / dt + 1.1) # time step number\n\n    mesh = Mesh(xmin, xmax, nx, vmin, vmax, nv)\n\n    a = 0.001 # perturbation for f\n    E1 = fft(-1.0 * a / kx * sin.(kx .* mesh.x)) # electric field\n    epsil = a # perturbation for S\n\n    femi1 = 1\n    femi2 = -1\n\n    # spin variables\n    S1 = zeros(nx)\n    S2 = zeros(nx)\n    S3 = zeros(nx)\n\n    dS1 = zeros(nx)\n    dS2 = zeros(nx)\n    dS3 = zeros(nx)\n\n    for k = 1:nx\n        normx = sqrt(1 + epsil^2) #    norm of S\n        dS1[k] = epsil * cos(kx * mesh.x[k]) / normx\n        dS2[k] = epsil * sin(kx * mesh.x[k]) / normx\n        dS3[k] = 1.0 / normx - 1.0\n        S1[k] = dS1[k]\n        S2[k] = dS2[k]\n        S3[k] = 1.0 / normx\n    end\n\n    function maxwellian0(x, v)\n        vth, femi = 1.0, 1.0\n        f = (1 / sqrt(pi) / vth) * exp(-(v / vth)^2) * (1 + a * cos(kx * x)) * femi\n        return f\n    end\n    function maxwellian3(x, v)\n        vth, femi = 1.0, 0.5\n        f = (1 / sqrt(pi) / vth) * exp(-(v / vth)^2) * (1 + a * cos(kx * x)) * femi\n        return f\n    end\n\n    f0 = initialize_distribution(mesh, maxwellian0)\n    f1 = zeros(mesh.nv, mesh.nx)\n    f2 = zeros(mesh.nv, mesh.nx)\n    f3 = initialize_distribution(mesh, maxwellian3)\n\n    ex_energy(E1, mesh) = sum(abs2.(ifft(E1))) * mesh.dx\n\n    t = Float64[]\n    push!(t, 0.0)\n    e = Float64[]\n    push!(e, ex_energy(E1, mesh))\n\n    Hv = HvSubsystem(mesh)\n    He = HeSubsystem(mesh)\n    H1fh = H1fhSubsystem(mesh)\n    H2fh = H2fhSubsystem(mesh)\n    H3fh = H3fhSubsystem(mesh)\n\n    for i = 1:nsteps\n        step!(Hv, f0, f1, f2, f3, E1, dt)\n        step!(He, f0, f1, f2, f3, E1, dt)\n        step!(H1fh, f0, f1, f2, f3, S1, S2, S3, dt, tildeK)\n        step!(H2fh, f0, f1, f2, f3, S1, S2, S3, dt, tildeK)\n        step!(H3fh, f0, f1, f2, f3, S1, S2, S3, dt, tildeK)\n        push!(t, i * dt)\n        push!(e, ex_energy(E1, mesh))\n    end\n\n    t, e\n\nend\n\nT = 150 # final simulation time\n\nt, e = main(T)\n\nplot(t, e, label = \"Ex energy\", yscale = :log10)\nline, g = fit_complex_frequency(t, e)\nplot!(t, line, label = \"g = $(imag(g))\")","category":"page"},{"location":"#VectorSpin","page":"Home","title":"VectorSpin","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is designed to solve Vlasov system with spin effects. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"This code is used in the paper (Crouseilles et al., 2023). ","category":"page"},{"location":"","page":"Home","title":"Home","text":"This is the vectorial version of the SpinGEMPIC.jl code that has been used  for the paper (Crouseilles et al., 2021)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Crouseilles, N.; Hervieux, P.-A.; Hong, X. and Manfredi, G. (2023). Vlasov–Maxwell equations with spin effects. Journal of Plasma Physics 89, 905890215.\n\n\n\nCrouseilles, N.; Hervieux, P.-A.; Li, Y.; Manfredi, G. and Sun, Y. (2021). Geometric particle-in-cell methods for the Vlasov–Maxwell equations with spin effects. Journal of Plasma Physics 87, 825870301.\n\n\n\n","category":"page"},{"location":"#Scalar-spin-laser-plasma-model","page":"Home","title":"Scalar spin laser plasma model","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Particle distribution function f(x p mathbf s t), ","category":"page"},{"location":"","page":"Home","title":"Home","text":"xin 0L, \np in mathbbR are scalars, \nmathbf s=(s_1s_2s_3) in mathbbR^3, \nmathbf E = (E_x mathbf E_perp) = (E_x E_y E_z), \nmathbf A = (A_x mathbf A_perp) = (0 A_y A_z), \nmathbf B =nablatimesmathbf  A = (0- partial_xA_z  partial_xA_y).","category":"page"},{"location":"","page":"Home","title":"Home","text":"The scalar spin Vlasov-Maxwell system is:","category":"page"},{"location":"","page":"Home","title":"Home","text":"left\nbeginaligned\nfracpartial fpartial t + p fracpartial fpartial x +  E_x - mathfrakh s_2 fracpartial^2 A_zpartial x^2 + mathfrakh s_3 fracpartial^2 A_ypartial x^2  - mathbf A_perp cdot fracpartial mathbf A_perppartial x fracpartial fpartial p   \n hspace3cm+ s_3 fracpartial A_zpartial x + s_2 fracpartial A_ypartial x -s_1 fracpartial A_ypartial x -s_1 fracpartial A_zpartial x  cdot fracpartial fpartial mathbf s = 0\nfracpartial E_xpartial t = -int_mathbbR^4 p f  mathrmdpmathrmdmathrmmathbf s\nfracpartial E_ypartial t = - fracpartial^2 A_ypartial x^2 + A_y int_mathbbR^4  f  mathrmdpmathrmdmathrmmathbf s + mathfrakhint_mathbbR^4 s_3 fracpartial fpartial xmathrmdpmathrmdmathrmmathbf s\nfracpartial E_zpartial t = - fracpartial^2 A_zpartial x^2 + A_z int_mathbbR^4  f  mathrmdpmathrmdmathrmmathbf s - mathfrakhint_mathbbR^4 s_2 fracpartial fpartial xmathrmdpmathrmdmathrmmathbf s\n fracpartial mathbf A_perppartial t = - mathbf E_perp\nfracpartial E_xpartial x = int_mathbbR^4 f mathrmdpmathrmdmathrmmathbf s - 1  text(Poisson equation)\nendaligned\nright","category":"page"},{"location":"","page":"Home","title":"Home","text":"The system numerically solve is the vector model:","category":"page"},{"location":"","page":"Home","title":"Home","text":"f(t xpmathbfs)=frac14pi(f_0(t xp)+3s_1f_1(t xp)+3s_2f_2(t xp)+3s_3f_3(t xp))","category":"page"},{"location":"","page":"Home","title":"Home","text":"left\nbeginaligned\nfracpartial f_0partial t + p fracpartial f_0partial x + left(E_x - mathbf A_perp cdot fracpartial mathbf A_perppartial x  right) fracpartial f_0partial p - mathfrakhfracpartial^2 A_zpartial x^2fracpartial f_2partial p +  mathfrakhfracpartial^2 A_ypartial x^2 fracpartial f_3partial p  = 0\nfracpartial f_1partial t + p fracpartial f_1partial x + left(E_x - mathbf A_perp cdot fracpartial mathbf A_perppartial x  right) fracpartial f_1partial p\n - fracpartial A_z partial x  f_3  -  fracpartial A_y partial x f_2 = 0\n fracpartial f_2partial t + p fracpartial f_2partial x + left(E_x - mathbf A_perp cdot fracpartial mathbf A_perppartial x  right) fracpartial f_2partial p - fracmathfrakh3 fracpartial^2 A_zpartial x^2fracpartial f_0partial p\n  +  fracpartial A_y partial x f_1 = 0\n  fracpartial f_3partial t + p fracpartial f_3partial x + left(E_x - mathbf A_perp cdot fracpartial mathbf A_perppartial x  right) fracpartial f_3partial p + fracmathfrakh3  fracpartial^2 A_ypartial x^2fracpartial f_0partial p\n  +  fracpartial A_z partial x f_1 = 0\nfracpartial E_xpartial t = -int_mathbbR p f_0  mathrmdmathrmp\nfracpartial E_ypartial t = - fracpartial^2 A_ypartial x^2 + A_y int_mathbbR  f_0  mathrmdmathrmp + mathfrakhint_mathbbR  fracpartial f_3partial xmathrmdmathrmp\nfracpartial E_zpartial t = - fracpartial^2 A_zpartial x^2 + A_z int_mathbbR  f_0  mathrmdmathrmp -mathfrakh int_mathbbR  fracpartial f_2partial xmathrmdmathrmp\n fracpartial mathbf A_perppartial t = - mathbf E_perp\nfracpartial E_xpartial x = int_mathbbR f_0 mathrmdmathrmp - 1 text(Poisson equation)\nendaligned\nright","category":"page"},{"location":"srs_without_spin/#Stimulated-Raman-Scattering-without-spin","page":"Validation","title":"Stimulated Raman Scattering without spin","text":"","category":"section"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"We consider the Vector spin Vlasov-Maxwell laser plasma model with mathbf f=0 and mathfrak h=0. More details in the section Numerical experiments in  (Crouseilles et al., 2023).","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"using Plots\nusing FFTW\nusing ProgressMeter\nusing VectorSpin","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"left\nbeginaligned\nfracpartial fpartial t + p fracpartial fpartial x +  E_x  - mathbf A_perp cdot fracpartial mathbf A_perppartial x fracpartial fpartial p = 0\nfracpartial E_xpartial t = -int_mathbbR p f  mathrmdp\nfracpartial E_ypartial t = - fracpartial^2 A_ypartial x^2 + A_y int_mathbbR  f  mathrmdp\nfracpartial E_zpartial t = - fracpartial^2 A_zpartial x^2 + A_z int_mathbbR  f  mathrmdp\nfracpartial mathbf A_perppartial t = - mathbf E_perp\nfracpartial E_xpartial x = int_mathbbR f mathrmdp - 1\nendaligned\nright","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"We consider the periodic condition with spatial period L=4pik_e, also take H=5 for the computational domain in v-direction.","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"We take the following values for physical parameters:","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"alpha = 0.02\nke = 1.2231\nvth = 0.17\nk0 = 2ke","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"Mathematical domain parameters are taken as N_x=129 N_v=129 Delta t =005","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"xmin, xmax, nx = 0.0, 4pi / ke, 129\nvmin, vmax, nv = -5.0, 5.0, 129\nmesh = Mesh(xmin, xmax, nx, vmin, vmax, nv)\ndt = 0.05","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"w_0=26428 k_s=k_e","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"w0 = 2.6428\nks = ke","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"We use a perturbed Maxwellian as an initial condition for f","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"f(t=0xp)=(1+alpha cos(k_e x))frac1sqrt2piv_the^-fracp^22v_th^2","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"f(x, v) = exp(-0.5 * v^2 / vth^2) * (1 + alpha * cos(ke * x)) / sqrt(2π) / vth","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"and the initial longitudinal electric field","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"E_x(t=0x)=(alpha k_e)sin(k_e x) ","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"Here alpha and k_e are the amplitude and the wave number of the perturbation respectively, and the v_th is the electron thermal speed. For the transverse fields, we consider an incident electromagnetic wave with circular polarization:","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"beginaligned\n E_y(t=0x)=E_0 cos(k_0 x) \n E_z(t=0x)=E_0 sin(k_0 x)\n A_y(t=0x)=-fracE_0w_0 sin(k_0 x)  \n A_z(t=0x)=fracE_0w_0 cos(k_0 x)\nendaligned ","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"where the k_0 and w_0 are the wave number and the amplitude of the transverse electric field respectively. ","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"We also take the amplitude of the incident wave E_ref=0325 as a reference value.  be in the range 025E_ref leq E_0  leq 2E_ref","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"function run(final_time, f0, f1, f2, f3, E1, E2, E3, A2, A3)\n    \n    dt = 0.05 \n    nsteps = ceil(Int, final_time / dt + 1)\n    k0 = 2.0 * ke\n    w0 = sqrt(1.0 + k0^2) # w0\n    h_int = 0.0\n    \n    data = Diagnostics(f0, f2, f3, E1, E2, E3, A2, A3, mesh, h_int)\n    \n    H2 = H2fhSubsystem(mesh)\n    He = HeSubsystem(mesh)\n    HA = HASubsystem(mesh)\n    H3 = H3fhSubsystem(mesh)\n    Hp = HpSubsystem(mesh)\n    \n    save!(data, 0.0, f0, f2, f3, E1, E2, E3, A2, A3)\n    \n    @showprogress 1 for i = 1:nsteps \n    \n        step!(H2, f0, f1, f2, f3, E3, A3, dt / 2, h_int)\n        step!(He, f0, f1, f2, f3, E1, E2, E3, A2, A3, dt / 2)\n        step!(HA, f0, f1, f2, f3, E2, E3, A2, A3, dt / 2)\n        step!(H3, f0, f1, f2, f3, E2, A2, dt / 2, h_int)\n        step!(Hp, f0, f1, f2, f3, E1, dt)\n        step!(H3, f0, f1, f2, f3, E2, A2, dt / 2, h_int)\n        step!(HA, f0, f1, f2, f3, E2, E3, A2, A3, dt / 2)\n        step!(He, f0, f1, f2, f3, E1, E2, E3, A2, A3, dt / 2)\n        step!(H2, f0, f1, f2, f3, E3, A3, dt / 2, h_int)\n        save!(data, i * dt, f0, f2, f3, E1, E2, E3, A2, A3)\n    \n    end\n    data\nend","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"time evolution of the longitudinal electric field norm for E_0 = E_{ref}","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":" E_x (t) =left(frac12int_0^L E_x^2(tx) mathrmdmathrmxright )^frac12","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"final_time = 150\nE0 = 0.325 \nE1 = fft(alpha ./ ke .* sin.(ke .* mesh.x))\nE2 = fft(E0 .* cos.(k0 .* mesh.x))\nE3 = fft(E0 .* sin.(k0 .* mesh.x))\nA2 = -fft(E0 ./ w0 .* sin.(k0 .* mesh.x))\nA3 = fft(E0 ./ w0 .* cos.(k0 .* mesh.x))\nf0 = initialize_distribution(mesh, f)\nf1 = zeros(mesh.nx, mesh.nv)\nf2 = zeros(mesh.nx, mesh.nv)\nf3 = zeros(mesh.nx, mesh.nv)\ndata1 = run(final_time, f0, f1, f2, f3, E1, E2, E3, A2, A3)\nplot(data1.time, data1.Ex_energy, yscale = :log10, label = \"Ex energy\")\nline, γ = fit_complex_frequency(data1.time, data1.Ex_energy)\nplot!(data1.time, line, legend = :bottomright, label = :none)\ntitle!(\"γ = $(imag(γ))\")\nxlabel!(\"ωₚt\")","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"(Image: )","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"final_time = 80\nE0 = 0.65 \nE1 = fft(alpha ./ ke .* sin.(ke .* mesh.x))\nE2 = fft(E0 .* cos.(k0 .* mesh.x))\nE3 = fft(E0 .* sin.(k0 .* mesh.x))\nA2 = -fft(E0 ./ w0 .* sin.(k0 .* mesh.x))\nA3 = fft(E0 ./ w0 .* cos.(k0 .* mesh.x))\nf0 = initialize_distribution(mesh, f)\nf1 = zeros(mesh.nx, mesh.nv)\nf2 = zeros(mesh.nx, mesh.nv)\nf3 = zeros(mesh.nx, mesh.nv)\ndata2 = run(final_time, f0, f1, f2, f3, E1, E2, E3, A2, A3)\nplot(data2.time, data2.Ex_energy, yscale = :log10, label = \"Ex energy\")\nline, γ = fit_complex_frequency(data2.time, data2.Ex_energy)\nplot!(data2.time, line, legend = :bottomright, label = :none)\ntitle!(\"γ = $(imag(γ))\")\nxlabel!(\"ωₚt\")","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"(Image: )","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"plot(data1.time, abs.(data1.energy .- first(data1.energy)) ./ first(data1.energy), label=\"E₀=Eref\")\nplot!(data2.time, abs.(data2.energy .- first(data2.energy)) ./ first(data2.energy), label=\"E₀=2Eref\")\nxlabel!(\"ωₚt\")\nylabel!(\"relative energy\")","category":"page"},{"location":"srs_without_spin/","page":"Validation","title":"Validation","text":"(Image: )","category":"page"},{"location":"example/#Example","page":"Vlasov-Maxwell","title":"Example","text":"","category":"section"},{"location":"example/","page":"Vlasov-Maxwell","title":"Vlasov-Maxwell","text":"using Plots\nusing FFTW\nusing VectorSpin\n\nfunction run()\n\n    T = 50 # 4000  # final time\n    nx = 65   # partition of x\n    nv = 129   # partition of v\n    vmin, vmax = -2.5, 2.5  \n    ke = 1.2231333040331807  \n    xmin, xmax = 0.0, 4pi / ke  \n    dt = 0.04\n    nsteps = floor(Int, T / dt + 1.1) \n    a = 0.02 # 0.001; perturbation coefficient\n    h_int = 0.2 # hbar\n    k0 = 2.0 * ke\n    ww = sqrt(1.0 + k0^2.0) # w0\n    ata = 0.2\n    vth = 0.17\n\n    mesh = Mesh(xmin, xmax, nx, vmin, vmax, nv)\n    \n    E1, E2, E3, A2, A3 = initialfields( mesh, a, ww, ke, k0)\n    f0, f1, f2, f3 = initialfunction(mesh, a, ke, vth,  ata)\n\n    results = Diagnostics(f0, f2, f3, E1, E2, E3, A2, A3, mesh, h_int)\n\n    H2 = H2Subsystem(mesh)\n    He = HeSubsystem(mesh)\n    HA = HASubsystem(mesh)\n    H3 = H3Subsystem(mesh)\n    Hp = HpSubsystem(mesh)\n\n    for i = 1:nsteps # Loop over time\n\n        step!(H2, f0, f1, f2, f3, E3, A3, 0.5dt, h_int)\n        step!(He, f0, f1, f2, f3, E1, E2, E3, A2, A3, 0.5dt)\n        step!(HA, f0, f1, f2, f3, E2, E3, A2, A3, 0.5dt)\n        step!(H3, f0, f1, f2, f3, E2, A2, 0.5dt, h_int)\n        step!(Hp, f0, f1, f2, f3, E1, dt)\n        step!(H3, f0, f1, f2, f3, E2, A2, 0.5dt, h_int)\n        step!(HA, f0, f1, f2, f3, E2, E3, A2, A3, 0.5dt)\n        step!(He, f0, f1, f2, f3, E1, E2, E3, A2, A3, 0.5dt)\n        step!(H2, f0, f1, f2, f3, E3, A3, 0.5dt, h_int)\n        \n        save!(results, i*dt, f0, f2, f3, E1, E2, E3, A2, A3)\n\n    end\n\n    results\n\nend","category":"page"},{"location":"example/","page":"Vlasov-Maxwell","title":"Vlasov-Maxwell","text":"data = run()","category":"page"},{"location":"example/","page":"Vlasov-Maxwell","title":"Vlasov-Maxwell","text":"plot(data.time, log.(data.Ex_energy))","category":"page"},{"location":"example/","page":"Vlasov-Maxwell","title":"Vlasov-Maxwell","text":"plot(data.time, data.E_energy)","category":"page"},{"location":"example/","page":"Vlasov-Maxwell","title":"Vlasov-Maxwell","text":"plot(data.time, data.B_energy)","category":"page"},{"location":"example/","page":"Vlasov-Maxwell","title":"Vlasov-Maxwell","text":"plot(data.time, data.energy)","category":"page"},{"location":"example/","page":"Vlasov-Maxwell","title":"Vlasov-Maxwell","text":"plot(data.time, data.Sz)","category":"page"}]
}
